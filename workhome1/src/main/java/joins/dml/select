--Retrieve the start times of members' bookings
 >> select starttime from cd.bookings b
    join cd.members m on b.memid = m.memid
    where m.surname =  'Farrell' and m.firstname = 'David'

--Work out the start times of bookings for tennis courts
 >> select starttime as start,name from cd.bookings b
    join cd.facilities f on f.facid = b.facid
    where f.name like  'Tennis Court%' and b.starttime between '2012-09-21 00:00:00' and '2012-09-21 23:59:59'
    order by b.starttime

--Produce a list of all members who have recommended another member
>> select distinct recs.firstname as firstname, recs.surname as surname
   from cd.members mems
   inner join cd.members recs on recs.memid = mems.recommendedby
   order by surname, firstname;

--Produce a list of all members, along with their recommender
>> select  mems.firstname as memfname , mems.surname as memsname ,
   recs.firstname as recfname , recs.surname as recsname
   from cd.members mems
   left join cd.members recs
   on recs.memid = mems.recommendedby
   order by mems.surname , mems.firstname

--Produce a list of all members who have used a tennis court
 >> select distinct m.firstname || ' '|| m.surname as member , f.name as facility
    from cd.members m
    join cd.bookings b on m.memid = b.memid
    join cd.facilities f on b.facid = f.facid
    where name like 'Tennis Court%'
    order by member , facility

--Produce a list of costly bookings
 >> select m.firstname || ' ' ||m.surname as member, f.name,
    case
    when m.memid = 0 then b.slots * guestcost
    else b.slots * membercost
    end as cost
    from cd.members m
    join cd.bookings b on m.memid = b.memid
    join cd.facilities f on b.facid = f.facid
    where starttime >= '2012-09-14' and starttime < '2012-09-15' and
    ((m.memid = 0 and b.slots*f.guestcost > 30) or
    (m.memid != 0 and b.slots*f.membercost > 30))
    ORDER BY cost desc

--Produce a list of all members, along with their recommender, using no joins
 >> select distinct m1.firstname || ' ' ||  m1.surname as member,
    (select m.firstname || ' ' || m.surname as recommender  from  cd.members m
    where m1.recommendedby = m.memid)
    from cd.members m1
    order by member

--Produce a list of costly bookings, using a subquery
 >> select (select firstname || ' ' || surname as member from cd.members m
    where m.memid = b.memid  ),(select name from cd.facilities f where  f.facid = b.facid),
    (select  case
    when b.memid = 0 then b.slots * guestcost
    else b.slots * membercost
    end as cost
    from cd.facilities f
    where f.facid = b.facid and (( b.memid = 0 and b.slots * guestcost > 30) or (b.memid != 0 and b.slots * membercost > 30 )))
    from cd.bookings b
    where starttime >= '2012-09-14' and
    starttime < '2012-09-15' and
    (select  case
    when b.memid = 0 then b.slots * guestcost
    else b.slots * membercost
    end as cost
    from cd.facilities f
    where f.facid = b.facid and (( b.memid = 0 and b.slots * guestcost > 30) or (b.memid != 0 and b.slots * membercost > 30 ))) > 30
    order by cost desc